"use strict";

//this is the base URL for all task objects managed by your application
//requesting this with a GET will get all tasks objects
//sending a POST to this will insert a new task object
//sending a PUT to this URL + '/' + task.objectId will update an existing task
//sending a DELETE to this URL + '/' + task.objectId will delete an existing task
var tasksUrl = 'https://api.parse.com/1/classes/tasks';

angular.module('ToDoApp', ['ui.bootstrap'])
    .config(function ($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        //$httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'replace this with your application id';
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'TS3ZHZANgoLoUJ1Hsi61d572R2H7qqmPcfVXBm05';
        //$httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'replace this with your REST API key';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = '5SnqDILYTZwN7BJrlj4lHQayi3KLmQ8YUJjVZUjy';
    })

    .controller('TasksController', function ($scope, $http) {
        $scope.refreshTasks = function () {
            $scope.loading = true;
            $http.get(tasksUrl + '?order=-votes')
                .success(function (responseData) {
                    $scope.tasks = responseData.results;
                    $scope.loading = false;
                });
        };

        $scope.refreshTasks();

        $scope.newTask = {deleted: false, votes: 0, rating: 1};

        $scope.addTask = function () {
            $scope.inserting = true;
            $http.post(tasksUrl, $scope.newTask)
                .success(function (responseData) {
                    $scope.newTask.objectId = responseData.objectId;
                    $scope.tasks.push($scope.newTask);
                    $scope.newTask = {deleted: false, votes: 0, rating: 1};
                })
                .finally(function () {
                    $scope.inserting = false;
                });
        };

        $scope.updateTask = function (task) {
            $http.put(tasksUrl + '/' + task.objectId, task)
                .success(function () {
                    //we could give some feedback to the user
                });
        };


        $scope.deleteTask = function (task) {
            if (window.confirm('Are you sure?')) {
                $http.delete(tasksUrl + '/' + task.objectId, task)
                     .success(function () {
                        $scope.refreshTasks()
                    })
            }
        };

        $scope.incrementVotes = function (task, amount) {
            if (task.votes > 0 || (task.votes == 0 && amount == 1) || (task.votes == null && amount == 1))
                var postData = {
                    votes: {
                        __op: "Increment",
                        amount: amount
                    }
                };

            $scope.updating = true;
            $http.put(tasksUrl + '/' + task.objectId, postData)
                .success(function (respData) {
                    task.votes = respData.votes
                })
                .error(function (err) {
                    console.log(err)
                })
                .finally(function () {
                    $scope.updating = false;
                });
        };
    });